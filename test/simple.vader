Given ():
  Hello

Execute (Make sure Vim actually works.):
  Log "Run simple 'put' test."
  let t="Vim is working."
  put =t
  Log "Done."

Expect:
  Hello
  Vim is working.


Execute (Check Python support ):
  Assert has('python') == 1, 'FAIL: Vim must have Python support.'
  Log 'Import modules.'
  python import os
  python import vim
  Log 'Yank/paste current line.'
  python vim.command('normal! yy2p')
  python vim.current.buffer.append(os.path.basename(vim.vars['vader_file']))
  Log 'Done.'

Expect:
  Hello
  Hello
  Hello
  simple.vader


Execute (Check IPython):
  Assert has('python') == 1, 'FAIL: Vim must have Python support.'
  python import vim
  Log 'Import IPython.'
  python import IPython
  Log 'Check IPython version >= 1.'
  python vim.current.buffer.append(str(IPython.version_info[0] >= 1))
  Log 'Done.'

Expect:
  Hello
  True


Before (set filetype to Python):
  Log 'Enable filetype plugin.'
  filetype plugin on
  Log 'Set filetype=python.'
  set ft=python
  Log '[before] done.'

Execute (Ensure vim_python ftplugin loads):
  Assert has('python') == 1, 'FAIL: Vim must have Python support.'
  python import vim
  python vim.current.buffer.append("filetype is " + vim.eval("&ft"))
  AssertEqual 'python', &filetype
  python vim.current.buffer.append("IPython command exists: " + vim.eval("exists(':IPython') != 0"))
  python vim.command("IPython")
  python import vim_ipython
  python vim.current.buffer.append("vim_ipython loaded")
  Log 'Done.'

Expect:
  Hello
  filetype is python
  IPython command exists: 1
  vim_ipython loaded
